// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      UserRole @default(RECRUITER)
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  jobs         Job[]
  applications Application[]

  @@map("users")
}

model Job {
  id          String    @id @default(cuid())
  title       String
  description String
  requirements String[]
  location    String?
  salary      String?
  type        JobType   @default(FULL_TIME)
  status      JobStatus @default(ACTIVE)
  uniqueUrl   String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  applications Application[]
  interviews   Interview[]

  @@map("jobs")
}

model Application {
  id           String            @id @default(cuid())
  candidateName String
  candidateEmail String
  phone        String?
  resumeUrl    String
  resumeScore  Float?
  status       ApplicationStatus @default(PENDING)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  // Relations
  jobId      String
  job        Job         @relation(fields: [jobId], references: [id], onDelete: Cascade)
  userId     String?
  user       User?       @relation(fields: [userId], references: [id])
  interviews Interview[]

  @@map("applications")
}

model Interview {
  id          String          @id @default(cuid())
  status      InterviewStatus @default(SCHEDULED)
  score       Float?
  feedback    String?
  transcript  String?
  duration    Int? // in minutes
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  // Relations
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  jobId         String
  job           Job         @relation(fields: [jobId], references: [id], onDelete: Cascade)

  @@map("interviews")
}

enum UserRole {
  RECRUITER
  ADMIN
  CANDIDATE
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}

enum JobStatus {
  ACTIVE
  PAUSED
  CLOSED
}

enum ApplicationStatus {
  PENDING
  REVIEWING
  INTERVIEW_SCHEDULED
  INTERVIEWED
  ACCEPTED
  REJECTED
}

enum InterviewStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
